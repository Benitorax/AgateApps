# Configuration for Sonata suite

# Sonata User
sonata_user:
    security_acl: true
    manager_type: orm
    profile:
        menu:
            - { route: 'sonata_user_profile_edit', label: 'link_edit_profile', domain: 'SonataUserBundle'}
            - { route: 'sonata_user_profile_edit_authentication', label: 'link_edit_authentication', domain: 'SonataUserBundle'}

# Sonata Admin
sonata_admin:
    title:        Esteren
#    title_logo:   logo.jpg

# Sonata Blocks
sonata_block:
    default_contexts: [esteren]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.user.block.menu:         ~ # used to display the menu in profile pages
        sonata.user.block.account:      ~ # used to display menu option (login option)
        sonata.admin.block.admin_list:
            contexts:   [admin]

# Sonata i18n
sonata_intl:
    timezone:
        default: "Europe/Paris"

# Sonata Media
sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    providers:
        image:
            resizer: sonata.media.resizer.simple
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
            formats:
                small:  { width: 100, quality: 70 }
                medium: { width: 250, quality: 70 }
                big:    { width: 500, quality: 70 }
    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/
    filesystem:
        local:
            directory:  %kernel.root_dir%/../web/uploads/media
            create:     false

# Sonata Formatter
sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

# Sonata Pages
sonata_page:
    multisite: host
    use_streamed_response: true # set the value to false in debug mode or if the reverse proxy does not handle streamed response
    ignore_route_patterns:
        - ^(.*)admin(.*)   # ignore admin route, ie route containing 'admin'
        - ^_(.*)          # ignore symfony routes
        - ^esteren(.*)
        - ^pierstoval(.*)
        - ^corahn(.*)
        - ^fos

    ignore_routes:
        - sonata_page_esi_cache
        - sonata_page_ssi_cache
        - sonata_page_js_sync_cache
        - sonata_page_js_async_cache
        - sonata_cache_esi
        - sonata_cache_ssi
        - sonata_cache_js_async
        - sonata_cache_js_sync
        - sonata_cache_apc

    ignore_uri_patterns:
        - ^/(%locales_regex%)/admin/   # ignore admin route, ie route containing 'admin'

    page_defaults:
        homepage: {decorate: false} # disable decoration for homepage, key - is a page route

    default_template: default # template key from templates section, used as default for pages
    templates:
        default: {path: 'SonataPageBundle::layout.html.twig', name: default }

    # manage the http errors
    catch_exceptions:
        not_found: [404]    # render 404 page with "not_found" key (name generated: _page_internal_error_{key})
        fatal:     [500]    # so you can use the same page for different http errors or specify specific page for each error

# Sonata SEO
sonata_seo:
    default:          sonata.seo.page.default
    encoding:         UTF-8
    page:
        title:            Esteren
        metas:
            name:
                keywords:    %sonata.base_metas%
                description: %sonata.base_desc%
                robots:      index, follow

            property:
                # Facebook application settings
                #'fb:app_id':          XXXXXX
                #'fb:admins':          admin1, admin2

                # Open Graph information
                # see http://developers.facebook.com/docs/opengraphprotocol/#types or http://ogp.me/
                'og:site_name':       Sonata Project Sandbox
                'og:description':     A demo of the some rich bundles for your Symfony2 projects

            http-equiv:
                'Content-Type':         text/html; charset=utf-8
                #'X-Ua-Compatible':      IE=EmulateIE7

        head:
            'xmlns':              http://www.w3.org/1999/xhtml
            'xmlns:og':           http://opengraphprotocol.org/schema/
            #'xmlns:fb':           "http://www.facebook.com/2008/fbml"

# Sonata Cache
#sonata_cache:
#    caches:
#        memcached:
#            prefix: test     # prefix to ensure there is no clash between instances
#            servers:
#                - {host: 127.0.0.1, port: 11211, weight: 0}

#        predis:
#            servers:
#                - {host: 127.0.0.1, port: 6379, database: 42}

#        symfony:
#            token: s3cur3sf2 # token used to clear the related cache
#            php_cache_enabled: true # Optional (default: false), clear APC or PHP OPcache
#            types: [ ] # Optional, you can restrict allowed cache types
#            servers:
#                - { domain: 127.0.0.1, ip: 127.0.0.1, port: 80 }
